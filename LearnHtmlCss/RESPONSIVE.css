*{
    margin : 0;
    padding : 0;
    box-sizing: border-box;
}
html,body{
    width: 100vw;
    height: 100vh;
}

/* four terms are there examle font size ..1. px --> means it will be fixed if you make screen small it will be fixed and not bm small which is bad  means if we make screen small then font size will be as usual bad...2. %--> there will be one child div and parent div here child div bm according to parent if you say child font size 50% then it will set a/c to parent if parent is 40px then child fontsize will be 20px.....3. vw/vh---> it will set its font size(20px) according to total screen size means if you make screen size small final then it will set 20px a/c to final small screen size...4. vmax--> it is same as previous but thing is it change a/c to max length means if laptop then width is max then it will change a/c to vw same function as vw  
1* . em--> lets say parent font size is 50px then you can give em to childs if you give child fontsize 2em then it will 2 times of parent font size i.e 100px of that child fontsize , if 0.5em it will be half of  parent i.e 25px means it is parent dependent
2* . rem--> it depended on main html which is above ..here 1rem = 16px 2rem = 32px...*/

#parent{
    height: 100%;
    width: 100%;
    background-color: lightblue;
   display: flex;
   align-items: center;
   justify-content: center;
   /*flex-direction: column; */  /* it can be used for flex direction if the flex direction is col then all properties will be in col i.e if we use justify content --space evenly then  it will be in col  direction*/
   justify-content: space-evenly;
   flex-wrap: wrap;   /* it is feature of responsivness means if you make screen small it wraup up its child box means you can check*/
}
.child{
    height: 350px;
    width: 350px;
    background-color: crimson;
    border: 2px solid black;
}

/*ANIMATIONS*/
#box{
    height: 400px;
    width: 400px;
    background-color: hotpink;
    position:absolute;
    animation-name: anime;
    animation-duration: 2s;
    animation-delay: 6s;
}
@keyframes anime{
    from{
        left: 0;
        background-color: crimson;
        rotate: 0deg;
        }
        to{
            left: 70%;
            background-color: blue;
            rotate: 360deg;
        }
        }
